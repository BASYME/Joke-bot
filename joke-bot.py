import sqlite3
import os
import random
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv
import requests
from bs4 import BeautifulSoup

load_dotenv()
TOKEN = os.getenv('BOT_TOKEN')

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ---
keyboard = [
    [KeyboardButton("–ê–Ω–µ–∫–¥–æ—Ç!"), KeyboardButton("–°–≤–µ–∂–∏–π –∞–Ω–µ–∫–¥–æ—Ç —Å —Å–∞–π—Ç–∞")],
]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# --- –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç –∏–∑ —Ñ–∞–π–ª–∞ ---
def get_joke():
    conn = sqlite3.connect('jokes.db')
    c = conn.cursor()
    c.execute('SELECT COUNT(*) FROM jokes')
    count = c.fetchone()[0]
    if count == 0:
        conn.close()
        return "–ù–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
    random_id = random.randint(1, count)
    c.execute(f'SELECT joke FROM jokes WHERE id={random_id}')
    row = c.fetchone()
    conn.close()
    if row:
       return row[0]
    else:
        return "–ù–µ—Ç –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."



# --- –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–µ–∫–¥–æ—Ç —Å —Å–∞–π—Ç–∞ ---
def get_fresh_joke():
    try:
        url = 'https://www.anekdot.ru/random/anekdot/'
        response = requests.get(url)
        response.encoding = 'utf-8'
        soup = BeautifulSoup(response.text, 'html.parser')
        jokes_divs = soup.find_all('div', class_='text')
        jokes = [div.get_text(strip=True) for div in jokes_divs]
        return random.choice(jokes) if jokes else "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–π –∞–Ω–µ–∫–¥–æ—Ç."
    except Exception:
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–∞ —Å —Å–∞–π—Ç–∞."

# --- /start ---
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∞–Ω–µ–∫–¥–æ—Ç—á–∏–∫. –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É üëá",
        reply_markup=reply_markup
    )

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    if text == "–ê–Ω–µ–∫–¥–æ—Ç!":
        await update.message.reply_text(get_joke(), reply_markup=reply_markup)
    elif text == "–°–≤–µ–∂–∏–π –∞–Ω–µ–∫–¥–æ—Ç —Å —Å–∞–π—Ç–∞":
        await update.message.reply_text(get_fresh_joke(), reply_markup=reply_markup)

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler('start', start_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print('Bot started!')
    app.run_polling()
